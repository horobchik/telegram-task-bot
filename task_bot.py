import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–≤–¥–∞–Ω—å (–¥–æ–¥–∞–π—Ç–µ –ø–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫)
TASK_EXAMPLES = [
     "–ü—Ä–æ—á–∏—Ç–∞—Ç–∏ 10 —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –∫–Ω–∏–≥–∏",
    "–ó—Ä–æ–±–∏—Ç–∏ 20 –≤—ñ–¥–∂–∏–º–∞–Ω—å",
    "–í–∏–≤—á–∏—Ç–∏ 5 –Ω–æ–≤–∏—Ö —Å–ª—ñ–≤ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é",
    "–ü—Ä–æ–≤–µ—Å—Ç–∏ 15 —Ö–≤–∏–ª–∏–Ω –Ω–∞ —Å–≤—ñ–∂–æ–º—É –ø–æ–≤—ñ—Ç—Ä—ñ",
    "–ù–∞–ø–∏—Å–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–∫–æ–≤–∏–π –∑–∞–ø–∏—Å",
    "–ü—Ä–∏–±—Ä–∞—Ç–∏ –Ω–∞ —Ä–æ–±–æ—á–æ–º—É —Å—Ç–æ–ª—ñ",
    "–ü–æ–∑–¥–æ—Ä–æ–≤–∏—Ç–∏—Å—è –∑ —Ç—Ä—å–æ–º–∞ –¥—Ä—É–∑—è–º–∏",
    "–í–∏–ø–∏—Ç–∏ —Å–∫–ª—è–Ω–∫—É –≤–æ–¥–∏",
    "–ó—Ä–æ–±–∏—Ç–∏ —Ä–æ–∑—Ç—è–∂–∫—É 5 —Ö–≤–∏–ª–∏–Ω",
    "–ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞",
    "–ú–µ–¥–∏—Ç–∞—Ü—ñ—è 5 —Ö–≤–∏–ª–∏–Ω",
    "–ü—Ä–∏–≥–æ—Ç—É–≤–∞—Ç–∏ –Ω–æ–≤—É —Å—Ç—Ä–∞–≤—É",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –ø–æ—Ö–≤–∞–ª–∏—Ç–∏ —Ç–µ–±–µ",
    "–ó—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± —Ö—Ç–æ—Å—å –æ–±—ñ–π–Ω—è–≤ —Ç–µ–±–µ",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏ —Å–ª–æ–≤–æ –∑–∞–¥–æ–º –Ω–∞–ø–µ—Ä–µ–¥",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏ '–≤–æ–≤–∫' –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É",
    "–ó—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± —Ö—Ç–æ—Å—å –∑–∞–≤–∏–≤ —è–∫ –≤–æ–≤–∫",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –ø—ñ–¥–Ω—è—Ç–∏ —Ä—É–∫–∏ –¥–æ–≥–æ—Ä–∏",
    "–ó—Ä–æ–±–∏, —â–æ–± —Ö—Ç–æ—Å—å –≤—Å—Ç–∞–≤ –±–µ–∑ –ø—Ä–∏—á–∏–Ω–∏",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –∑–∞–ø–ª—é—â–∏—Ç–∏ –æ—á—ñ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥",
    "–ó—Ä–æ–±–∏, —â–æ–± —Ö—Ç–æ—Å—å —Å—ñ–≤ –Ω–∞ –ø—ñ–¥–ª–æ–≥—É",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞ —Ç–æ–±–æ—é —Ñ—Ä–∞–∑—É",
    "–û—Ç—Ä–∏–º–∞–π –ø'—è—Ç—å –≤—ñ–¥ –±—É–¥—å-–∫–æ–≥–æ",
    "–ó—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± —Ö—Ç–æ—Å—å –ø–æ–ø–ª–µ—Å–∫–∞–≤ —Å–µ–±–µ –ø–æ –≥–æ–ª–æ–≤—ñ",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç–∏ —Ç–∞–Ω—Ü—é–≤–∞–ª—å–Ω–∏–π —Ä—É—Ö",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –ø—Ä–æ—Å–ø—ñ–≤–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω—É –ø—ñ—Å–Ω—ñ",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –Ω–∞–∑–≤–∞—Ç–∏ —Ç–µ–±–µ –±–æ—Å–æ–º",
    "–û—Ç—Ä–∏–º–∞–π –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç –±–µ–∑ –ø—Ä—è–º–æ–≥–æ –ø—Ä–æ—Ö–∞–Ω–Ω—è",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –∑—Ä–æ–±–∏—Ç–∏ –¥–∏–≤–Ω–µ –æ–±–ª–∏—á—á—è",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏ ¬´–º—è—É¬ª",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏ —Ä–∏–º—É",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å —Ä–æ–∑–∫–∞–∑–∞—Ç–∏ –∂–∞—Ä—Ç",
    "–û—Ç—Ä–∏–º–∞–π –ø—ñ–¥–∫–∞–∑–∫—É –≤—ñ–¥ –∫–æ–≥–æ—Å—å (–±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –¥–ª—è —á–æ–≥–æ)",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –¥–æ 10",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –¥–æ—Ç–æ—Ä–∫–Ω—É—Ç–∏—Å—è –¥–æ —á–æ–ª–∞",
    "–û—Ç—Ä–∏–º–∞–π –±—É–¥—å-—è–∫–∏–π –ø—Ä–µ–¥–º–µ—Ç —É –ø–æ–¥–∞—Ä—É–Ω–æ–∫",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –Ω–∞–∑–≤–∞—Ç–∏ —Å–≤–æ—î —É–ª—é–±–ª–µ–Ω–µ —á–∏—Å–ª–æ",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å —Å—Ç—Ä–∏–±–Ω—É—Ç–∏",
    "–ó—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± —Ö—Ç–æ—Å—å –∑–∞–ø–∏—Ç–∞–≤ —Ç–µ–±–µ: ¬´–©–æ —Ç–∏ –∑–∞–¥—É–º–∞–≤?¬ª",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –ø—Ä–æ–π—Ç–∏—Å—å –¥–∑–∏“ë–æ—é",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç–∏ –µ–º–æ—Ü—ñ—é ¬´–∑–¥–∏–≤—É–≤–∞–Ω–Ω—è¬ª",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –∑—Ä–æ–±–∏—Ç–∏ –∑–≤—É–∫ —Ç–≤–∞—Ä–∏–Ω–∏",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –∑–∞–∫—Ä–∏—Ç–∏ –æ—á—ñ –π –≤–∫–∞–∑–∞—Ç–∏ –Ω–∞ –ø—ñ–≤–Ω—ñ—á",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –ø—Ä–∏–¥—É–º–∞—Ç–∏ –Ω–æ–≤–µ —Å–ª–æ–≤–æ",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏: ¬´–¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –∫–ª–∞—Å–Ω–æ –≤–∏–≥–ª—è–¥–∞—î—à!¬ª",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å —â–æ—Å—å –Ω–∞–º–∞–ª—é–≤–∞—Ç–∏ (–Ω–∞ —Å–µ—Ä–≤–µ—Ç—Ü—ñ, –ø–∞–ø–µ—Ä—ñ)",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –ø–æ–≤–æ—Ä—É—à–∏—Ç–∏ –≤—É—Ö–∞–º–∏ (–∞–±–æ –∑—Ä–æ–±–∏—Ç–∏ –≤–∏–≥–ª—è–¥)",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–µ —Å–ª–æ–≤–æ",
    "–û—Ç—Ä–∏–º–∞–π –≤—ñ–¥ –∫–æ–≥–æ—Å—å –≤–æ–¥—É / –Ω–∞–ø—ñ–π",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –∑–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ü–µ —Å–∏–¥—ñ–Ω–Ω—è",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å —Ä–æ–∑–∫–∞–∑–∞—Ç–∏ –¥–∏—Ç—è—á–∏–π —Å–ø–æ–≥–∞–¥",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –∑–≥–∞–¥–∞—Ç–∏ –∞–Ω–µ–∫–¥–æ—Ç",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –¥–æ—Ç–æ—Ä–∫–Ω—É—Ç–∏—Å—å –¥–æ —Å—Ç—ñ–Ω–∏",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å —â–æ—Å—å –ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ –¥–ª—è —Ç–µ–±–µ",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç–∏ —É–ª—é–±–ª–µ–Ω–∏–π —Ç–∞–Ω–µ—Ü—å",
    "–û—Ç—Ä–∏–º–∞–π —á–∏—é—Å—å –ø–æ—Å–º—ñ—à–∫—É –±–µ–∑ –∂–∞—Ä—Ç—É",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å —Ç—Ä–∏–º–∞—Ç–∏ —â–æ—Å—å –Ω–∞ –≥–æ–ª–æ–≤—ñ",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –ø–æ—à–µ–ø–∫–∏ —â–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏",
    "–û—Ç—Ä–∏–º–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è, —è–∫–µ —â–µ –Ω–µ –∑–∞–¥–∞–≤",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –ø–æ–¥–∞—Ç–∏ —Ç–æ–±—ñ —â–æ—Å—å —É —Å—Ç–∏–ª—ñ –æ—Ñ—ñ—Ü—ñ–∞–Ω—Ç–∞",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –∑–∞–≥–∞–¥–∞—Ç–∏ –±–∞–∂–∞–Ω–Ω—è",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –≤–∏–º–æ–≤–∏—Ç–∏ —Å–ª–æ–≤–æ –∑ 10 –±—É–∫–≤",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏: ¬´–Ø –≤–∏–≥—Ä–∞–≤!¬ª",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –∑–æ–±—Ä–∞–∑–∏—Ç–∏ —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –∑—Ä–æ–±–∏—Ç–∏ —Å–µ–ª—Ñ—ñ –∑ —Ç–æ–±–æ—é",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –Ω–∞–∑–≤–∞—Ç–∏ —Ç–µ–±–µ –≤–∏–≥–∞–¥–∞–Ω–∏–º —ñ–º–µ–Ω–µ–º",
    "–û—Ç—Ä–∏–º–∞–π –≤—ñ–¥ –∫–æ–≥–æ—Å—å –∂–∞—Ä—Ç —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Å–µ—Ä–π–æ–∑–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –Ω–∞–∑–≤–∞—Ç–∏ —É–ª—é–±–ª–µ–Ω–∏–π —Ñ—Ä—É–∫—Ç",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –æ–ø–∏—Å–∞—Ç–∏ —Ç–µ–±–µ —Ç—Ä—å–æ–º–∞ —Å–ª–æ–≤–∞–º–∏",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –¥–æ—Ç–æ—Ä–∫–Ω—É—Ç–∏—Å—å –¥–æ –ø—ñ–¥–ª–æ–≥–∏",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –∑'—ó—Å—Ç–∏ —â–æ—Å—å —ñ–∑ –∑–∞–ø–ª—é—â–µ–Ω–∏–º–∏ –æ—á–∏–º–∞",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –ø—Ä–∏–Ω–µ—Å—Ç–∏ —Ç–æ–±—ñ –±—É–¥—å-—â–æ –Ω–µ–∑–≤–∏—á–Ω–µ",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –ø–æ–≥—Ä–∞—Ç–∏ —É ¬´–∫–∞–º—ñ–Ω—å-–Ω–æ–∂–∏—Ü—ñ-–ø–∞–ø—ñ—Ä¬ª",
    "–û—Ç—Ä–∏–º–∞–π –Ω–µ–∑–≤–∏—á–Ω—É –ø–æ—Ä–∞–¥—É",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –≤–∏–º–æ–≤–∏—Ç–∏ —Å–∫–æ—Ä–æ–º–æ–≤–∫—É",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –∑—Ä–æ–±–∏—Ç–∏ —â–æ—Å—å –æ–¥–Ω—ñ—î—é —Ä—É–∫–æ—é",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç —Ç—Ä–µ—Ç—ñ–π –ª—é–¥–∏–Ω—ñ",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –ø–µ—Ä–µ—Ä–∞—Ö—É–≤–∞—Ç–∏ 3 —É–ª—é–±–ª–µ–Ω—ñ —Ñ—ñ–ª—å–º–∏",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –¥–æ—Ç–æ—Ä–∫–Ω—É—Ç–∏—Å—å –¥–æ –Ω–æ—Å–∞ —ñ–Ω—à–æ—ó –ª—é–¥–∏–Ω–∏",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏ ¬´–Ø –ø—Ä–∏–π—à–æ–≤ –∑ –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ¬ª",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –≤—Å—Ç–∞—Ç–∏ –π –∑—Ä–æ–±–∏—Ç–∏ —É–∫–ª—ñ–Ω",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –≥–æ–ª–æ—Å–Ω–æ —Å–∫–∞–∑–∞—Ç–∏ ¬´–û –Ω—ñ!¬ª",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –≤—ñ–¥–∫—Ä–∏—Ç–∏ –∞–±–æ –∑–∞–∫—Ä–∏—Ç–∏ –¥–≤–µ—Ä—ñ",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å –∑'—ó—Å—Ç–∏ —â–æ—Å—å –Ω–µ–∑–≤–∏—á–Ω–µ (–∞–ª–µ —ó—Å—Ç—ñ–≤–Ω–µ)",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å —Ç—Ä–∏–º–∞—Ç–∏ —Ä—ñ–≤–Ω–æ–≤–∞–≥—É –Ω–∞ –æ–¥–Ω—ñ–π –Ω–æ–∑—ñ",
    "–ü–æ–ø—Ä–æ—Å–∏ –∫–æ–≥–æ—Å—å –Ω–∞–∑–≤–∞—Ç–∏ —É–ª—é–±–ª–µ–Ω–∏–π –∑–∞–ø–∞—Ö",
    "–ó–º—É—Å—å –∫–æ–≥–æ—Å—å —Ç–æ—Ä–∫–Ω—É—Ç–∏—Å—è –¥–æ –ø–ª–µ—á–∞ —ñ–Ω—à–æ—ó –ª—é–¥–∏–Ω–∏",
    "–ó–∞—Å—Ç–∞–≤ –∫–æ–≥–æ—Å—å –∑—Ä–æ–±–∏—Ç–∏ ¬´–ø–æ–≤—ñ—Ç—Ä—è–Ω–∏–π –ø–æ—Ü—ñ–ª—É–Ω–æ–∫¬ª",
    "–û—Ç—Ä–∏–º–∞–π –±—É–¥—å-—è–∫–∏–π —Å–º—ñ—à–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç"
]

def generate_tasks():
    """–ì–µ–Ω–µ—Ä—É—î 6 —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å"""
    return random.sample(TASK_EXAMPLES, 6)


user_data = {}

def generate_tasks():
    """–ì–µ–Ω–µ—Ä—É—î 6 —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å"""
    return random.sample(TASK_EXAMPLES, 6)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
    user_id = update.effective_user.id
    user_data[user_id] = {
        'tasks': generate_tasks(),
        'statuses': [""] * 6  # –ü—É—Å—Ç—ñ —Å—Ç–∞—Ç—É—Å–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É
    }
    
    # –í—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é
    start_keyboard = [[InlineKeyboardButton("–ü–æ—á–∞—Ç–∏", callback_data="show_rules")]]
    await update.message.reply_text(
        text="–í–∏–∫–æ–Ω–∞–π –∑–∞–≤–¥–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –≤–µ—á—ñ—Ä–∫–∏ —ñ –Ω–µ –≤–∏–¥–∞–π —Å–µ–±–µ. –Ø–∫—â–æ —Ç–µ–±–µ –∑–∞–ø—ñ–¥–æ–∑—Ä–∏–ª–∏ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —ñ —Å–∫–∞–∑–∞–ª–∏ - —Ü–µ –∑–∞–≤–¥–∞–Ω–Ω—è, –≤–æ–Ω–æ –∑–≥–æ—Ä–∞—î ‚ùå.–Ø–∫—â–æ –≤ —Ç–µ–±–µ –≤–∏–π—à–ª–æ, –≤—ñ–¥–º—ñ—Ç—å —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–æ ‚úÖ",
        reply_markup=InlineKeyboardMarkup(start_keyboard)
    )

async def show_rules(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—É—î –ø—Ä–∞–≤–∏–ª–∞ –∑ –∫–Ω–æ–ø–∫–æ—é"""
    query = update.callback_query
    await query.answer()
    
    rules_keyboard = [[InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è", callback_data="show_all_tasks")]]
    await query.edit_message_text(
        text="–Ø–∫—â–æ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞–¥—Ç–æ —Å–∫–ª–∞–¥–µ, –Ω–µ–¥–æ—Ä–µ—á–Ω–µ –¥–æ —Å—Ç–∏–ª—é –≤–µ—á—ñ—Ä–∫–∏ –∞–±–æ —Ç—É–ø–µ - –∑–∞–º—ñ–Ω–∏ –π–æ–≥–æ üîÅ. –ù–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –∑–∞–º—ñ–Ω—è—Ç–∏, —è–∫—â–æ —Ç–æ–±—ñ –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è –∑–∞–≤–¥–∞–Ω–Ω—è.–Ø–∫—â–æ –ø—ñ–¥ —á–∞—Å –≥—Ä–∏ –≤–∏—è—Å–Ω–∏—Ç—å—Å—è —â–æ —É —Ç–µ–±–µ —Ç–∞–∫–µ –∂ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫–µ –≤–∏–∫–æ–Ω—É–≤–∞–≤ —ñ–Ω—à–∏–π –≥—Ä–∞–≤–µ—Ü—å, –º–æ–∂–µ—à –æ–±—Ä–∞—Ç–∏ - –≤—Å–µ–æ–¥–Ω–æ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤–∏–∫–æ–Ω–∞—Ç–∏ –π–æ–≥–æ –∞–±–æ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —ñ–Ω—à–µ",
        reply_markup=InlineKeyboardMarkup(rules_keyboard)
    )

async def send_all_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –æ–∫—Ä–µ–º–∏–º–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏"""
    query = update.callback_query
    await query.answer()
    user_id = update.effective_user.id
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ–∂–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –æ–∫—Ä–µ–º–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
    for i, task in enumerate(user_data[user_id]['tasks']):
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ", callback_data=f"done_{i}"),
                InlineKeyboardButton("‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏", callback_data=f"skip_{i}"),
                InlineKeyboardButton("üîÅ –ó–∞–º—ñ–Ω–∏—Ç–∏", callback_data=f"replace_{i}")
            ]
        ]
        
       status = user_data[user_id]['statuses'][i]
        await context.bot.send_message(
            chat_id=user_id,
            text=f"üìå –ó–∞–≤–¥–∞–Ω–Ω—è {i+1}:\n{status}{task}",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–ª—è—î –≤—Å—ñ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()
    user_id = update.effective_user.id
    
    if query.data == "show_rules":
        await show_rules(update, context)
    elif query.data == "show_all_tasks":
        await send_all_tasks(update, context)
    else:
        action, task_index = query.data.split("_")
        task_index = int(task_index)
        
        if action == "done":
            user_data[user_id]['statuses'][task_index] = "‚úÖ "
        elif action == "skip":
            user_data[user_id]['statuses'][task_index] = "‚ùå "
        elif action == "replace":
            current_tasks = user_data[user_id]['tasks']
            available_tasks = [t for t in TASK_EXAMPLES if t not in current_tasks]
            if available_tasks:
                user_data[user_id]['tasks'][task_index] = random.choice(available_tasks)
                user_data[user_id]['statuses'][task_index] = ""
        
        # –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ", callback_data=f"done_{task_index}"),
                InlineKeyboardButton("‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏", callback_data=f"skip_{task_index}"),
                InlineKeyboardButton("üîÅ –ó–∞–º—ñ–Ω–∏—Ç–∏", callback_data=f"replace_{task_index}")
            ]
        ]
        status = user_data[user_id]['statuses'][task_index]
        await query.edit_message_text(
            text=f"üìå –ó–∞–≤–¥–∞–Ω–Ω—è {task_index+1}:\n{status}{user_data[user_id]['tasks'][task_index]}",
            reply_markup=InlineKeyboardMarkup(rules_keyboard),parse_mode="HTML"
        )

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token("7615231270:AAHWyL3-QGY6GUYFM46D5UP-dcAEQCymlEw").build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_button))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π...")
    application.run_polling()

if __name__ == "__main__":
    main()




